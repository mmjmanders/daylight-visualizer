on:
  pull_request:

jobs:
  pnpm_install:
    uses: ./.github/workflows/.pnpm_install.yml
    with:
      with_cache: true

  lint:
    runs-on: ubuntu-latest
    needs: pnpm_install
    steps:
      - uses: actions/checkout@v4
      - run: echo "store-dir=.pnpm-store" | tee -a $GITHUB_WORKSPACE/.npmrc
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: actions/cache@v4
        with:
          path: |
            .pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: pnpm_install
    steps:
      - uses: actions/checkout@v4
      - run: echo "store-dir=.pnpm-store" | tee -a $GITHUB_WORKSPACE/.npmrc
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: actions/cache@v4
        with:
          path: |
            .pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: |
          echo "VITE_BUILD_SHA=e2e" | tee -a $GITHUB_WORKSPACE/.env.local
          echo "VITE_GEOAPIFY_API_KEY=${{ secrets.GEOAPIFY_API_KEY }}" | tee -a $GITHUB_WORKSPACE/.env.local
      - run: pnpm build
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: ./dist

  test-e2e:
    needs: [pnpm_install, build]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        shardIndex: [1, 2, 3]
        shardCount: [3]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "store-dir=.pnpm-store" | tee -a $GITHUB_WORKSPACE/.npmrc
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: actions/cache@v4
        with:
          path: |
            .pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --prefer-offline --frozen-lockfile
      - uses: actions/download-artifact@v5
        with:
          name: build-${{ github.sha }}
          path: ./dist
      - run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            pnpm exec playwright install --with-deps
          else
            pnpm exec playwright install
          fi
      - run: pnpm test:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardCount }}
        env:
          HOME: ${{ matrix.os == 'ubuntu-latest' && '/root' || '/Users/runner' }}

  test-unit:
    runs-on: ubuntu-latest    
    needs: pnpm_install
    steps:
      - uses: actions/checkout@v4
      - run: echo "store-dir=.pnpm-store" | tee -a $GITHUB_WORKSPACE/.npmrc
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - uses: actions/cache@v4
        with:
          path: |
            .pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm test:unit

on:
  pull_request:
    paths:
      - '.github/workflows/services.yml'
      - 'src/**'
      - 'e2e/**'
      - 'pnpm-lock.yaml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: |
          echo "VITE_BUILD_SHA=e2e" | tee -a $GITHUB_WORKSPACE/.env.local
          echo "VITE_GEOAPIFY_API_KEY=${{ secrets.GEOAPIFY_API_KEY }}" | tee -a $GITHUB_WORKSPACE/.env.local
      - run: pnpm build
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_attempt }}
          path: ./dist
          retention-days: 1

  test-e2e:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.1-noble
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3]
        shardCount: [3]
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --prefer-offline --frozen-lockfile
      - uses: actions/download-artifact@v5
        with:
          name: build-${{ github.run_attempt }}
          path: ./dist
      - run: pnpm test:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardCount }}
        env:
          HOME: /root

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --prefer-offline --frozen-lockfile
      - run: pnpm test:unit --coverage
      - if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_attempt }}
          path: ./coverage
